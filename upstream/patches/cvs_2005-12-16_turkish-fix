Index: mutt/color.c
===================================================================
RCS file: /home/roessler/cvs/mutt/color.c,v
retrieving revision 3.8
retrieving revision 3.9
diff -u -p -r3.8 -r3.9
--- mutt/color.c	17 Sep 2005 20:46:10 -0000	3.8
+++ mutt/color.c	16 Dec 2005 18:49:40 -0000	3.9
@@ -309,14 +309,14 @@ parse_color_name (const char *s, int *co
 {
   char *eptr;
 
-  if (mutt_strncasecmp (s, "bright", 6) == 0)
+  if (ascii_strncasecmp (s, "bright", 6) == 0)
   {
     *attr |= brite;
     s += 6;
   }
 
   /* allow aliases for xterm color resources */
-  if (mutt_strncasecmp (s, "color", 5) == 0)
+  if (ascii_strncasecmp (s, "color", 5) == 0)
   {
     s += 5;
     *col = strtol (s, &eptr, 10);
Index: mutt/crypt.c
===================================================================
RCS file: /home/roessler/cvs/mutt/crypt.c,v
retrieving revision 3.32
retrieving revision 3.33
diff -u -p -r3.32 -r3.33
--- mutt/crypt.c	21 Oct 2005 04:35:37 -0000	3.32
+++ mutt/crypt.c	16 Dec 2005 18:49:40 -0000	3.33
@@ -552,7 +552,7 @@ void convert_to_7bit (BODY *a)
 	convert_to_7bit (a->parts);
     } 
     else if (a->type == TYPEMESSAGE &&
-	     mutt_strcasecmp(a->subtype, "delivery-status"))
+	     ascii_strcasecmp(a->subtype, "delivery-status"))
     {
       if(a->encoding != ENC7BIT)
 	mutt_message_to_7bit (a, NULL);
@@ -808,15 +808,15 @@ int mutt_signed_handler (BODY *a, STATE 
   
   if ((WithCrypto & APPLICATION_PGP)
       && protocol_major == TYPEAPPLICATION
-      && !mutt_strcasecmp (protocol_minor, "pgp-signature"))
+      && !ascii_strcasecmp (protocol_minor, "pgp-signature"))
     ;
   else if ((WithCrypto & APPLICATION_SMIME)
            && protocol_major == TYPEAPPLICATION
-	   && !(mutt_strcasecmp (protocol_minor, "x-pkcs7-signature")
-	       && mutt_strcasecmp (protocol_minor, "pkcs7-signature")))
+	   && !(ascii_strcasecmp (protocol_minor, "x-pkcs7-signature")
+	       && ascii_strcasecmp (protocol_minor, "pkcs7-signature")))
     ;
   else if (protocol_major == TYPEMULTIPART
-	   && !mutt_strcasecmp (protocol_minor, "mixed"))
+	   && !ascii_strcasecmp (protocol_minor, "mixed"))
     ;
   else
   {
@@ -840,7 +840,7 @@ int mutt_signed_handler (BODY *a, STATE 
 	{
 	  if ((WithCrypto & APPLICATION_PGP)
               && signatures[i]->type == TYPEAPPLICATION 
-	      && !mutt_strcasecmp (signatures[i]->subtype, "pgp-signature"))
+	      && !ascii_strcasecmp (signatures[i]->subtype, "pgp-signature"))
 	  {
 	    if (crypt_pgp_verify_one (signatures[i], s, tempfile) != 0)
 	      goodsig = 0;
@@ -850,8 +850,8 @@ int mutt_signed_handler (BODY *a, STATE 
 
 	  if ((WithCrypto & APPLICATION_SMIME)
               && signatures[i]->type == TYPEAPPLICATION 
-	      && (!mutt_strcasecmp(signatures[i]->subtype, "x-pkcs7-signature")
-		  || !mutt_strcasecmp(signatures[i]->subtype, "pkcs7-signature")))
+	      && (!ascii_strcasecmp(signatures[i]->subtype, "x-pkcs7-signature")
+		  || !ascii_strcasecmp(signatures[i]->subtype, "pkcs7-signature")))
 	  {
 	    if (crypt_smime_verify_one (signatures[i], s, tempfile) != 0)
 	      goodsig = 0;
Index: mutt/handler.c
===================================================================
RCS file: /home/roessler/cvs/mutt/handler.c,v
retrieving revision 3.25
retrieving revision 3.26
diff -u -p -r3.25 -r3.26
--- mutt/handler.c	22 Nov 2005 12:21:14 -0000	3.25
+++ mutt/handler.c	16 Dec 2005 18:49:40 -0000	3.26
@@ -1843,7 +1843,7 @@ int mutt_body_handler (BODY *b, STATE *s
 	handler = mutt_signed_handler;
     }
     else if ((WithCrypto & APPLICATION_PGP)
-             && mutt_strcasecmp ("encrypted", b->subtype) == 0)
+             && ascii_strcasecmp ("encrypted", b->subtype) == 0)
     {
       p = mutt_get_parameter ("protocol", b->parameter);
 
Index: mutt/init.c
===================================================================
RCS file: /home/roessler/cvs/mutt/init.c,v
retrieving revision 3.46
retrieving revision 3.47
diff -u -p -r3.46 -r3.47
--- mutt/init.c	5 Oct 2005 19:24:40 -0000	3.46
+++ mutt/init.c	16 Dec 2005 18:49:40 -0000	3.47
@@ -834,9 +834,9 @@ static int parse_attach_list (BUFFER *bu
     a = safe_malloc(sizeof(ATTACH_MATCH));
 
     /* some cheap hacks that I expect to remove */
-    if (!mutt_strcasecmp(buf->data, "any"))
+    if (!ascii_strcasecmp(buf->data, "any"))
       a->major = safe_strdup("*/.*");
-    else if (!mutt_strcasecmp(buf->data, "none"))
+    else if (!ascii_strcasecmp(buf->data, "none"))
       a->major = safe_strdup("cheap_hack/this_should_never_match");
     else
       a->major = safe_strdup(buf->data);
@@ -898,9 +898,9 @@ static int parse_unattach_list (BUFFER *
   {
     mutt_extract_token (buf, s, 0);
 
-    if (!mutt_strcasecmp(buf->data, "any"))
+    if (!ascii_strcasecmp(buf->data, "any"))
       tmp = safe_strdup("*/.*");
-    else if (!mutt_strcasecmp(buf->data, "none"))
+    else if (!ascii_strcasecmp(buf->data, "none"))
       tmp = safe_strdup("cheap_hack/this_should_never_match");
     else
       tmp = safe_strdup(buf->data);
@@ -1001,13 +1001,13 @@ static int parse_attachments (BUFFER *bu
     op = '+';
     category--;
   }
-  if (!mutt_strncasecmp(category, "attachment", strlen(category))) {
+  if (!ascii_strncasecmp(category, "attachment", strlen(category))) {
     if (op == '+')
       listp = &AttachAllow;
     else
       listp = &AttachExclude;
   }
-  else if (!mutt_strncasecmp(category, "inline", strlen(category))) {
+  else if (!ascii_strncasecmp(category, "inline", strlen(category))) {
     if (op == '+')
       listp = &InlineAllow;
     else
@@ -1038,13 +1038,13 @@ static int parse_unattachments (BUFFER *
     op = '+';
     p--;
   }
-  if (!mutt_strncasecmp(p, "attachment", strlen(p))) {
+  if (!ascii_strncasecmp(p, "attachment", strlen(p))) {
     if (op == '+')
       listp = &AttachAllow;
     else
       listp = &AttachExclude;
   }
-  else if (!mutt_strncasecmp(p, "inline", strlen(p))) {
+  else if (!ascii_strncasecmp(p, "inline", strlen(p))) {
     if (op == '+')
       listp = &InlineAllow;
     else
Index: mutt/parse.c
===================================================================
RCS file: /home/roessler/cvs/mutt/parse.c,v
retrieving revision 3.21
retrieving revision 3.22
diff -u -p -r3.21 -r3.22
--- mutt/parse.c	21 Oct 2005 04:35:37 -0000	3.21
+++ mutt/parse.c	16 Dec 2005 18:49:40 -0000	3.22
@@ -1542,7 +1542,7 @@ int count_body_parts (BODY *body, int fl
     {
       /* Always recurse multiparts, except multipart/alternative. */
       shallrecurse = 1;
-      if (!mutt_strcasecmp(bp->subtype, "alternative"))
+      if (!ascii_strcasecmp(bp->subtype, "alternative"))
         shallrecurse = 0;
 
       /* Don't count containers if they're top-level. */
Index: mutt/smime.c
===================================================================
RCS file: /home/roessler/cvs/mutt/smime.c,v
retrieving revision 3.47
retrieving revision 3.48
diff -u -p -r3.47 -r3.48
--- mutt/smime.c	21 Oct 2005 04:35:38 -0000	3.47
+++ mutt/smime.c	16 Dec 2005 18:49:40 -0000	3.48
@@ -1621,7 +1621,7 @@ int smime_verify_one (BODY *sigbdy, STAT
       rewind (smimeerr);
       
       line = mutt_read_line (line, &linelen, smimeerr, &lineno);
-      if (linelen && !mutt_strcasecmp (line, "verification successful"))
+      if (linelen && !ascii_strcasecmp (line, "verification successful"))
 	badsig = 0;
 
       FREE (&line);
@@ -1842,7 +1842,7 @@ static BODY *smime_handle_entity (BODY *
     rewind (smimeerr);
     
     line = mutt_read_line (line, &linelen, smimeerr, &lineno);
-    if (linelen && !mutt_strcasecmp (line, "verification successful"))
+    if (linelen && !ascii_strcasecmp (line, "verification successful"))
       m->goodsig = 1;
     FREE (&line);
   }
