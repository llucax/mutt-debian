#!/usr/bin/make -f

###

# Uncomment one of these if you're rebuilding using them instead of libdb4.X
# HCACHE_DB := gdbm
# HCACHE_DB := qdbm

###

# Configure arguments

confflags  = 	--prefix=/usr			\
		--sysconfdir=/etc		\
		--mandir=/usr/share/man		\
		--with-sharedir=/usr/share/mutt	\
		--with-docdir=/usr/share/doc	\
		--with-mailpath=/var/mail	\
						\
		--disable-dependency-tracking	\
						\
		--enable-compressed		\
		--enable-debug			\
		--enable-fcntl			\
		--enable-hcache			\
		--enable-imap			\
		--enable-inodesort		\
		--enable-pop			\
						\
		--with-curses			\
		--with-gnutls			\
		--with-idn			\
		--with-mixmaster		\
		--with-sasl			\
						\
		$(hcache_db)

DEB_HOST_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)

confflags += --build $(DEB_BUILD_GNU_TYPE)

# Only specify --host when cross-compiling
ifneq ($(DEB_BUILD_GNU_TYPE), $(DEB_HOST_GNU_TYPE))
    confflags += --host $(DEB_HOST_GNU_TYPE)
endif

#

hcache_db := --without-gdbm --without-qdbm

ifeq ($(HCACHE_DB),gdbm)
    hcache_db := --without-qdbm --without-bdb
endif

ifeq ($(HCACHE_DB),qdbm)
    hcache_db := --without-gdbm --without-bdb
endif

###

# Directory to make the build on

objdir = $(CURDIR)/obj-$(DEB_HOST_GNU_TYPE)

###

# CFLAGS

CFLAGS   = -Wall -g
CPPFLAGS = -I/usr/include/qdbm

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

###

configure: $(objdir)/configure-stamp
$(objdir)/configure-stamp:
	dh_testdir
	
	ln -sf /usr/share/misc/config.sub .
	ln -sf /usr/share/misc/config.guess .
	
	ln -sf debian/patches
	quilt push -a || test $$? = 2
	
	# sort the patches as printed by mutt -v
	[ -e PATCHES.unsorted ] || mv PATCHES PATCHES.unsorted && \
	env LC_COLLATE=C sort PATCHES.unsorted >PATCHES
	
	# do not rebuild these files
	touch configure.in aclocal.m4 Makefile.in configure config.h.in
	
	-mkdir $(objdir)
	cd $(objdir) && \
	env CFLAGS="$(CFLAGS)" CPPFLAGS="$(CPPFLAGS)" \
	../configure $(confflags)
	
	echo '#include "config-debian.h"' >>$(objdir)/config.h
	
	touch $@

#

build: $(objdir)/build-stamp
$(objdir)/build-stamp: $(objdir)/configure-stamp
	cd $(objdir) && \
	$(MAKE) CFLAGS="$(CFLAGS)"
	
	touch $@

#

clean:
	dh_testdir
	dh_testroot
	
	[ ! -e PATCHES.unsorted ] || mv PATCHES.unsorted PATCHES
	quilt pop -a -R || test $$? = 2
	
	# quilt cruft
	rm -f   patches
	rm -rf .pc
	touch PATCHES
	
	# please dpkg-source
	rm -f po/*.gmo
	rm -f config.guess config.sub
	
	# remove build tree
	rm -rf $(objdir)
	
	dh_clean
	
#

install: debian/tmp/install-stamp
debian/tmp/install-stamp:
	dh_testdir
	dh_testroot
	dh_clean
	cd $(objdir) && $(MAKE) install DESTDIR=$(CURDIR)/debian/tmp
	
	cd debian/tmp/usr/share/doc; \
	rm -rf samples/iconv samples/ca-bundle.crt; \
	mv NEWS NEWS.old; \
	mv ChangeLog.old changelog.old; \
	cp $(CURDIR)/UPDATING NEWS
	
	chmod +x debian/extra/lib/*
	chmod +x debian/header.awk
	debian/header.awk debian/patches/features/* >debian/tmp/README.Patches
	
	cp $(objdir)/Muttrc.head debian/tmp/Muttrc
	echo "# GnuPG configuration" >>debian/tmp/Muttrc
	grep '^set' contrib/gpg.rc \
		| sed -e 's#pgpewrap#/usr/lib/mutt/pgpewrap#' \
		| sed -e 's#/usr/bin/gpg#gpg#' \
		>> debian/tmp/Muttrc
	cat debian/extra/rc/* >>debian/tmp/Muttrc
	
	touch $@

#

binary: binary-arch

binary-arch: build install
	dh_testdir
	dh_testroot
	
	dh_install
	dh_installman
	dh_installmime
	dh_installmenu
	dh_installdocs
	dh_installexamples
	dh_installchangelogs ChangeLog
	
	dh_link
	dh_strip
	dh_compress --exclude usr/share/doc/mutt/README.Patches
	dh_fixperms --exclude usr/bin/mutt_dotlock
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary-indep:
	@echo "Nothing to do."

#

.PHONY: configure build clean install binary binary-arch binary-indep
